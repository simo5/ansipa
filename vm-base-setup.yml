---
- debug:
    var: fromscratch

- name: kill all VMs if fromscratch is defined
  command: virsh -c {{virsh_uri}} destroy {{guests[item].img_name}}
  with_items: "{{guests}}"
  ignore_errors: True
  when: fromscratch

- name: kill base image if fromscratch is defined
  command: virsh -c {{virsh_uri}} destroy {{item.name}}
  with_items: "{{baseimg}}"
  ignore_errors: True
  when: fromscratch

- name: remoe base image if fromscratch is defined
  command: virsh -c {{virsh_uri}} undefine {{item.name}}
  with_items: "{{baseimg}}"
  ignore_errors: True
  when: fromscratch

- name: destroy the base storage if any
  command: virsh -c {{virsh_uri}} vol-delete --pool {{virsh_vol}} {{item.name}}.img
  with_items: "{{baseimg}}"
  ignore_errors: True
  when: fromscratch

- name: get list of vms
  virt: command=list_vms
  register: vms_info

- name: copy kickstart
  copy:
    src: '{{item.kickstart}}'
    dest: '{{basepath}}/{{item.kickstart}}'
  with_items: "{{baseimg}}"

- name: create base VM if none available
  command: virt-install --connect {{virsh_uri}}
           -n {{item.name}}
           -r {{item.mem}}
           --vcpus {{item.cpu}}
           --location {{os_location}}
           --os-type {{item.os.type}}
           --os-variant {{item.os.variant}}
           --network network={{netname}}
           --initrd-inject {{basepath}}/{{item.kickstart}}
           --extra-args="inst.ks=file:/{{item.kickstart}} inst.text"
           --graphics spice
           --{{item.virt_hypervisor}}
           --virt-type {{item.virt_type}}
           --disk size={{disksize}},path={{basepath}}/{{item.name}}.img
           --noautoconsole
           --noreboot
           --wait -1
  when: item.name not in vms_info.list_vms
  with_items: "{{baseimg}}"

- name: get guest info
  virt: command=info
  register: virt_info

- name: make sure the base vm is not running
  virt: name={{item.name}} state=shutdown
  with_items: "{{baseimg}}"
